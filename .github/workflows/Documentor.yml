name: Documentation

on:
  push:
    branches:
      - master
    tags: '*'
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [1.5.0]
        julia-arch: [x86]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-processcoverage@v1
        
      - name: Setup .NET Core # Required to execute ReportGenerator
        uses: actions/setup-dotnet@v1
        with:
              dotnet-version: 3.1.302
      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@4.6.4
        with:
            reports: 'lcov.info' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
            targetdir: 'docs/src/coverage' # REQUIRED # The directory where the generated report should be saved.
            reporttypes: 'HtmlInline;Badges;TextSummary' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
            verbosity: 'Info' # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
            tag: '${{ github.run_number }}_${{ github.run_id }}' # Optional tag or build version.

      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
        run: julia --project=docs/ docs/make.jl
